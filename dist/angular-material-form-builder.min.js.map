{"version":3,"file":"angular-material-form-builder.min.js","mappings":"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","sources":["webpack://angular-material-form-builder/webpack/universalModuleDefinition","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-view.directive.js","webpack://angular-material-form-builder/./src/lib/main/main.controller.js","webpack://angular-material-form-builder/./src/lib/utils/utils.service.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/date-item/date-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/upload-item/upload-view.tpl.html","webpack://angular-material-form-builder/webpack/bootstrap","webpack://angular-material-form-builder/webpack/runtime/define property getters","webpack://angular-material-form-builder/webpack/runtime/hasOwnProperty shorthand","webpack://angular-material-form-builder/webpack/runtime/make namespace object","webpack://angular-material-form-builder/./src/lib/index.module.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-material-form-builder\"] = factory();\n\telse\n\t\troot[\"angular-material-form-builder\"] = factory();\n})(self, function() {\nreturn ","/**\n * @ngInject\n *\n * @param {import('../../utils/utils.service').Utils} Utils\n * @param {JQLite} $element\n */\nfunction AgreementItemCtrl(Utils, $element) {\n  this.Element = $element\n  this.item = Utils.extend(this.item || {}, {\n    config: {\n      maxSelections: null,\n    },\n    options: [\n      {\n        value: '',\n        selected: false,\n      },\n    ],\n  })\n}\n\nexport { AgreementItemCtrl }\n","import { AgreementItemCtrl } from './agreement-item.controller'\n// import AgreementItemTemplate from './agreement-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass AgreementItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.scope = {\n      item: '=',\n    }\n    this.controller = AgreementItemCtrl\n    this.controllerAs = 'Agreement'\n    this.bindToController = true\n  }\n}\n\nexport { AgreementItem }\n","class AgreementViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('AgreementView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { AgreementViewCtrl }\n","import { AgreementViewCtrl } from './agreement-view.controller'\nimport AgreementViewTemplate from './agreement-view.tpl.html'\n\nclass AgreementView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.template = AgreementViewTemplate\n    this.restrict = 'E'\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = AgreementViewCtrl\n    this.controllerAs = 'AgreementView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {AgreementViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { AgreementView }\n","class CheckboxesItemCtrl {\n  /**\n   * @ngInject\n   *\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        maxSelections: null,\n      },\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n      selected: false,\n    })\n    // Focus new element\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { CheckboxesItemCtrl }\n","import CheckboxesItemTemplate from './checkboxes-item.tpl.html'\nimport { CheckboxesItemCtrl } from './checkboxes-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nfunction CheckboxesItem() {\n  const directive = {\n    restrict: 'E',\n    template: CheckboxesItemTemplate,\n    scope: {\n      item: '=',\n    },\n    controller: CheckboxesItemCtrl,\n    controllerAs: 'Checkboxes',\n    bindToController: true,\n  }\n\n  return directive\n}\n\nexport { CheckboxesItem }\n","class CheckboxesViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('CheckboxesView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { CheckboxesViewCtrl }\n","import CheckboxesViewTemplate from './checkboxes-view.tpl.html'\nimport { CheckboxesViewCtrl } from './checkboxes-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass CheckboxesView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = CheckboxesViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = CheckboxesViewCtrl\n    this.controllerAs = 'CheckboxesView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {CheckboxesViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { CheckboxesView }\n","class DateItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        type: 'date',\n      },\n    })\n  }\n}\n\nexport { DateItemCtrl }\n","import { DateItemCtrl } from './date-item.controller'\nimport DateItemTemplate from './date-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass DateItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = DateItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = DateItemCtrl\n    this.controllerAs = 'Date'\n    this.bindToController = true\n  }\n}\n\nexport { DateItem }\n","class DateViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { DateViewCtrl }\n","import { DateViewCtrl } from './date-view.controller'\nimport DateViewTemplate from './date-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass DateView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = DateViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = DateViewCtrl\n    this.controllerAs = 'DateView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { DateView }\n","const DEFAULT_TITLE = {\n  upload: 'Attachment',\n  agreement: 'Agreement',\n  input: 'Field',\n  chooseFromList: 'Select',\n  label: 'Label',\n  multipleChoices: 'Choice',\n  matrix: 'Matrix',\n  checkboxes: 'Options',\n  textarea: 'Text',\n  date: 'Date',\n}\n\nclass FormItemCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {ng.IAttributes} $attrs\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, $attrs, Utils) {\n    this.Attrs = $attrs\n    this.Utils = Utils\n    this.templates = {\n      upload: '<upload-item item=\"FormItem.item\"></upload-item>',\n      agreement: '<agreement-item item=\"FormItem.item\"></agreement-item>',\n      input: '<input-item item=\"FormItem.item\"></input-item>',\n      chooseFromList:\n        '<bet-form-choose-from-list item=\"FormItem.item\"></bet-form-choose-from-list>',\n      label: '<label-item item=\"FormItem.item\"></label-item>',\n      multipleChoices:\n        '<radio-button-item item=\"FormItem.item\"></radio-button-item>',\n      matrix: '<matrix-item item=\"FormItem.item\"></matrix-item>',\n      checkboxes: '<checkboxes-item item=\"FormItem.item\"></checkboxes-item>',\n      textarea: '<textarea-item item=\"FormItem.item\"></textarea-item>',\n      date: '<date-item item=\"FormItem.item\"></date-item>',\n    }\n    this.item = {}\n    this.scope = $scope\n  }\n\n  init() {\n    this.item = this.Utils.extend(this.item || {}, {\n      type: this.Attrs.type,\n      props: {\n        title: DEFAULT_TITLE[this.Attrs.type],\n        helpText: '',\n      },\n      config: {\n        required: false,\n      },\n    })\n  }\n\n  deleteClicked() {\n    this.onDelete({ item: this.item, index: this.index() })\n  }\n\n  /**\n   *\n   * @param {string} type\n   */\n  _getItemTemplate(type) {\n    const prefix =\n      '' +\n      '<div class=\"form-item-container\">' +\n      '<div class=\"form-item-actions\">' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDelete\" ng-click=\"FormItem.deleteClicked()\"> ' +\n      '<md-icon class=\"material-icons small\">delete</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onUp\" ng-click=\"FormItem.onUp({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_up</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDown\" ng-click=\"FormItem.onDown({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_down</md-icon>' +\n      '</md-button>' +\n      '</div>' +\n      '<md-input-container>' +\n      '<label>Field Title</label>' +\n      '<input ng-model=\"FormItem.item.props.title\"/>' +\n      '</md-input-container>' +\n      '<md-input-container>' +\n      '<label>Help Text</label>' +\n      '<input ng-model=\"FormItem.item.props.helpText\" />' +\n      '</md-input-container>'\n\n    const suffix =\n      '' +\n      '<md-input-container>' +\n      '<md-checkbox ng-model=\"FormItem.item.config.required\">Required field</md-checkbox>' +\n      '</md-input-container>' +\n      '</div>'\n\n    return prefix + this.templates[type] + suffix\n  }\n}\n\nexport { FormItemCtrl }\n","import FormItemTemplate from './form-item.tpl.html'\nimport { FormItemCtrl } from './form-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItem {\n  /**\n   * @ngInject\n   * @param {ng.ICompileService} $compile\n   */\n  constructor($compile) {\n    this.$compile = $compile\n    this.restrict = 'E'\n    this.scope = {\n      item: '=',\n      onDelete: '&',\n      onUp: '&',\n      onDown: '&',\n      index: '&',\n    }\n    this.controller = FormItemCtrl\n    this.controllerAs = 'FormItem'\n    this.bindToController = true\n    this.template = FormItemTemplate\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    const template = ctrl._getItemTemplate(attrs.type)\n    const el = this.$compile(template)(scope)\n    // element.append(el)\n    // if done like above adds twice\n    // element.append(this.$compile(template)(scope))\n    ctrl.init()\n    return el\n  }\n}\nexport { FormItem }\n","class FormItemsContainerCtrl {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    /**\n     * @type {import('../../main/main.controller').FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { FormItemsContainerCtrl }\n","import { FormItemsContainerCtrl } from './form-items-container.controller'\nimport FormItemsContainerTemplate from './form-items-container.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItemsContainer {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.scope = {\n      form: '=',\n    }\n    this.template = FormItemsContainerTemplate\n    this.controller = FormItemsContainerCtrl\n    this.controllerAs = 'container'\n    this.bindToController = true\n  }\n}\n\nexport { FormItemsContainer }\n","class FormViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScù} $scope\n   */\n  constructor($scope) {\n    this.Scope = $scope\n  }\n\n  init() {}\n}\n\nexport { FormViewCtrl }\n","import { FormViewCtrl } from './form-view.controller'\nimport FormViewTemplate from './form-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormView {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = FormViewTemplate\n    this.scope = {\n      form: '=',\n    }\n    this.controller = FormViewCtrl\n    this.controllerAs = 'FormView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    ctrl.init()\n  }\n}\n\nexport { FormView }\n","class InputItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        type: 'text',\n      },\n    })\n  }\n}\n\nexport { InputItemCtrl }\n","import { InputItemCtrl } from './input-item.controller'\nimport InputItemTemplate from './input-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = InputItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = InputItemCtrl\n    this.controllerAs = 'Input'\n    this.bindToController = true\n  }\n}\n\nexport { InputItem }\n","class InputViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { InputViewCtrl }\n","import { InputViewCtrl } from './input-view.controller'\nimport InputViewTemplate from './input-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = InputViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = InputViewCtrl\n    this.controllerAs = 'InputView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { InputView }\n","class LabelItemCtrl {\n  /**\n   * @ngInject\n   * @param {JQLite} $element\n   */\n  constructor($element) {\n    this.Element = $element\n  }\n}\n\nexport { LabelItemCtrl }\n","import { LabelItemCtrl } from './label-item.controller'\nimport LabelItemTemplate from './label-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelItem {\n  constructor() {\n    this.restrict = 'E'\n    this.template = LabelItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = LabelItemCtrl\n    this.controllerAs = 'Label'\n    this.bindToController = true\n  }\n}\n\nexport { LabelItem }\n","class LabelViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {ng.ISCEService} $sce\n   */\n  constructor(Utils, $sce) {\n    this.Utils = Utils\n    this.$sce = $sce\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {})\n  }\n\n  get sanitizedTitle() {\n    return this.$sce.trustAsHtml(this.formItem.value)\n  }\n}\n\nexport { LabelViewCtrl }\n","import { LabelViewCtrl } from './label-view.controller'\nimport LabelViewTemplate from './label-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = LabelViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = LabelViewCtrl\n    this.controllerAs = 'LabelView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {LabelViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { LabelView }\n","class MatrixItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {ng.IDocumentService} $document\n   */\n  constructor(Utils, $document) {\n    this.RowContainer = angular.element(\n      $document[0].querySelector('.rowContainer')\n    )\n    this.ColumnContainer = angular.element(\n      $document[0].querySelector('.columnContainer')\n    )\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        rows: [\n          {\n            value: '',\n          },\n        ],\n        columns: [\n          {\n            value: '',\n          },\n        ],\n      },\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteRow(index) {\n    this.item.config.rows.splice(index, 1)\n  }\n\n  addRow() {\n    this.item.config.rows.push({\n      value: '',\n    })\n\n    setTimeout(\n      function () {\n        const options = this.RowContainer.find('input')\n        const addedOption = options[options.length - 1]\n        addedOption.focus()\n      }.bind(this),\n      0\n    )\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteColumn(index) {\n    this.item.config.columns.splice(index, 1)\n  }\n\n  addColumn() {\n    this.item.config.columns.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.ColumnContainer.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { MatrixItemCtrl }\n","import { MatrixItemCtrl } from './matrix-item.controller'\nimport MatrixItemTemplate from './matrix-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass MatrixItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = MatrixItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = MatrixItemCtrl\n    this.controllerAs = 'Matrix'\n    this.bindToController = true\n  }\n}\nexport { MatrixItem }\n","class MatrixViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.isValid = true\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {\n        rows: [],\n        columns: [],\n      },\n    })\n\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  _updateValidity() {\n    let valid = true\n    if (this.formItem.config.required) {\n      valid = !this.formItem.config.rows.some(\n        (row) => typeof row['selected'] === 'undefined'\n      )\n      //   for (let i = 0; i < this.formItem.config.rows.length; i++) {\n      //     if (typeof this.formItem.config.rows[i]['selected'] === 'undefined') {\n      //       valid = false\n      //       break\n      //     }\n      //   }\n    }\n\n    this.isValid = valid\n    this.form.$setValidity('required', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watchGroup(\n      [\n        'MatrixView.formItem.config.required',\n        'MatrixView.formItem.config.rows.length',\n      ],\n      (newVal) => {\n        if (newVal !== undefined) {\n          this._updateValidity()\n        }\n      }\n    )\n  }\n}\nexport { MatrixViewCtrl }\n","import MatrixViewTemplate from './matrix-view.tpl.html'\nimport { MatrixViewCtrl } from './matrix-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass MatrixView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = MatrixViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = MatrixViewCtrl\n    this.controllerAs = 'MatrixView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {MatrixViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { MatrixView }\n","class RadioButtonItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { RadioButtonItemCtrl }\n","import { RadioButtonItemCtrl } from './radio-button-item.controller'\nimport RadioButtonTemplate from './radio-button-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass RadioButtonItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = RadioButtonTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = RadioButtonItemCtrl\n    this.controllerAs = 'RadioButton'\n    this.bindToController = true\n  }\n}\n\nexport { RadioButtonItem }\n","class RadioButtonViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { RadioButtonViewCtrl }\n","import { RadioButtonViewCtrl } from './radio-button-view.controller'\nimport RadioButtonViewTemplate from './radio-button-view.tpl.html'\n\nclass RadioButtonView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = RadioButtonViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = RadioButtonViewCtrl\n    this.controllerAs = 'RadioButtonView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {RadioButtonViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { RadioButtonView }\n","class SelectItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { SelectItemCtrl }\n","import SelectTemplate from './select-item.tpl.html'\nimport { SelectItemCtrl } from './select-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass SelectItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = SelectTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = SelectItemCtrl\n    this.controllerAs = 'Select'\n    this.bindToController = true\n  }\n}\n\nexport { SelectItem }\n","class SelectViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { SelectViewCtrl }\n","import SelectViewTemplate from './select-view.tpl.html'\nimport { SelectViewCtrl } from './select-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass SelectView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n\n    this.restrict = 'E'\n    this.template = SelectViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = SelectViewCtrl\n    this.controllerAs = 'SelectView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {SelectViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { SelectView }\n","class TextareaItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaItemCtrl }\n","import { TextareaItemCtrl } from './textarea-item.controller'\nimport TextareaItemTemplate from './textarea-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass TextareaItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = TextareaItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = TextareaItemCtrl\n    this.controllerAs = 'Textarea'\n    this.bindToController = true\n  }\n}\n\nexport { TextareaItem }\n","class TextareaViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaViewCtrl }\n","import { TextareaViewCtrl } from './textarea-view.controller'\nimport TextareaViewTemplate from './textarea-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass TextareaView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.restrict = 'E'\n    this.template = TextareaViewTemplate\n    this.controller = TextareaViewCtrl\n    this.controllerAs = 'TextareaView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {TextareaViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { TextareaView }\n","class UploadItemCtrl {\n  /**\n   * @ngInject\n   *\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { UploadItemCtrl }\n","import UploadItemTemplate from './upload-item.tpl.html'\nimport { UploadItemCtrl } from './upload-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass UploadItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = UploadItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = UploadItemCtrl\n    this.controllerAs = 'Upload'\n    this.bindToController = true\n  }\n}\n\nexport { UploadItem }\n","class UploadViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor($scope, Utils, $element) {\n    this.Scope = $scope\n    this.Element = $element\n    this.Utils = Utils\n    this.formItem = {}\n  }\n  init() {\n    this.isMultiple = false\n    this.showAllowed = false\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {\n        size: 10,\n        uploadFileButtonLabel: 'Add files',\n      },\n      options: [],\n    })\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n  _updateMultiple() {\n    this.isMultiple = !!this.formItem.config.multipleUpload\n    const input = angular.element(\n      this.Element[0].querySelector('input[type=file]')\n    )\n    if (input) {\n      this.formItem.options = []\n      if (this.isMultiple) {\n        input.attr('multiple', 'multiple')\n      } else {\n        input.removeAttr('multiple')\n      }\n    }\n  }\n\n  _updateAccept() {\n    this.showAllowed = !!this.formItem.config.showAccept\n    const input = angular.element(\n      this.Element[0].querySelector('input[type=file]')\n    )\n    if (input) {\n      if (this.showAllowed) {\n        input[0].setAttribute('accept', this.formItem.config.accept)\n      } else {\n        input[0].removeAttribute('accept')\n        delete this.formItem.config.accept\n      }\n    }\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('UploadView.formItem.config.multipleUpload', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateMultiple()\n      }\n    })\n\n    this.Scope.$watch('UploadView.formItem.config.showAccept', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateAccept()\n      }\n    })\n\n    this.Scope.$watch('UploadView.formItem.config.accept', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateAccept()\n      }\n    })\n  }\n\n  removeItem(index) {\n    this.formItem.options.splice(index, 1)\n  }\n}\nexport { UploadViewCtrl }\n","import { UploadViewCtrl } from './upload-view.controller'\nimport UploadViewTemplate from './upload-view.tpl.html'\n\nconst MB = 1024 * 1024\n\nclass UploadView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.template = UploadViewTemplate\n    this.restrict = 'E'\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = UploadViewCtrl\n    this.controllerAs = 'UploadView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {UploadViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n\n    const button = angular.element(element[0].querySelector('.upload-button'))\n    const input = angular.element(element[0].querySelector('input[type=file]'))\n    const label = angular.element(element[0].querySelector('label'))\n\n    if (label.length) {\n      label.css('display', 'none')\n    }\n\n    button.on('click', () => {\n      label.css('display', 'none')\n      typeof input.trigger === 'function'\n        ? input.trigger('click')\n        : input[0].click()\n    })\n\n    input.on('change', (e) => {\n      scope.$apply(function () {\n        /**\n         * @type {File[]}\n         */\n        const files = Array.from(e.target.files)\n        // Max allowed size in MB\n        const maxSizeMB = ctrl.formItem.config.size * MB\n        const exceedsSize = files.some((file) => file.size >= maxSizeMB)\n        if (exceedsSize) {\n          label.css('display', 'block')\n          label.text(ctrl.formItem.config.sizeErrMessage)\n          ctrl.formItem.options = []\n        } else {\n          ctrl.formItem.options = files.map((file) => {\n            const { name, size, type } = file\n            return { name, size, type, file }\n          })\n        }\n      })\n    })\n  }\n}\n\nexport { UploadView }\n","/**\n * @typedef {{type:string}} Item\n * @typedef {{items: Item[]}} FormConfig\n */\n\nclass MainController {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    /**\n     * @type {FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   * Add new Item\n   * @param {string} type\n   */\n  addItem(type) {\n    this.form.items.push({\n      type,\n    })\n  }\n\n  /**\n   * Remove item at index\n   * @param {Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   * insert before (bounded)\n   * Pops out latest element (wanted?)\n   * @param {Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   * insert after (bounded)\n   * Pops out latest element (wanted?)\n   * @param {Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { MainController }\n","class Utils {\n  /**\n   * Recursively extend object properties\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object}\n   */\n  extend(dest, src) {\n    return Object.keys(src).reduce(\n      (result, key) => {\n        if (typeof result[key] === 'undefined') {\n          result[key] = src[key]\n        } else if (typeof src[key] === 'object') {\n          result[key] = this.extend(result[key], src[key])\n        }\n        return result\n      },\n      typeof dest === 'undefined' ? {} : dest\n    )\n  }\n}\n\nexport { Utils }\n","export default \"<md-input-container>\\n  <div\\n    layout=\\\"{{AgreementView.formItem.config.direction == 'horizontal' ? 'row' : 'columb'}}\\\"\\n  >\\n    <md-checkbox\\n      ng-model=\\\"AgreementView.formItem.options[0].selected\\\"\\n      ng-change=\\\"AgreementView.toggleSelectedOption(option)\\\"\\n      ng-disabled=\\\"AgreementView.disableOptions && !option.selected\\\"\\n      aria-label=\\\"...\\\"\\n      >{{AgreementView.formItem.options[0].value}}</md-checkbox\\n    >\\n  </div>\\n\\n  <div ng-messages=\\\"AgreementView.form.$error\\\">\\n    <div ng-message=\\\"minSelections\\\">\\n      Must select {{AgreementView.formItem.maxSelections || 1}} items\\n    </div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Checkboxes.item.options\\\"\\n>\\n  <md-input-container class=\\\"md-block\\\">\\n    <label>Max Selections</label>\\n    <input type=\\\"number\\\" ng-model=\\\"Checkboxes.item.config.maxSelections\\\" />\\n  </md-input-container>\\n\\n  <md-switch\\n    ng-model=\\\"Checkboxes.item.config.direction\\\"\\n    ng-true-value=\\\"'horizontal'\\\"\\n    ng-false-value=\\\"'vertical'\\\"\\n  >\\n    Layout direction ({{Checkboxes.item.config.direction == 'horizontal' ?\\n    'Horizontal' : 'Vertical'}})\\n  </md-switch>\\n\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in Checkboxes.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button class=\\\"md-button\\\" ng-click=\\\"Checkboxes.deleteOption($index)\\\">\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      ng-click=\\\"Checkboxes.addOption()\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">add</md-icon>\\n    </md-button>\\n  </div>\\n</div>\\n\";","export default \"<md-input-container>\\n  <div\\n    layout=\\\"{{CheckboxesView.formItem.config.direction == 'horizontal' ? 'row' : 'column'}}\\\"\\n  >\\n    <md-checkbox\\n      ng-repeat=\\\"option in CheckboxesView.formItem.options track by $index\\\"\\n      ng-model=\\\"option.selected\\\"\\n      ng-change=\\\"CheckboxesView.toggleSelectedOption(option)\\\"\\n      ng-disabled=\\\"CheckboxesView.disableOptions && !option.selected\\\"\\n      aria-label=\\\"...\\\"\\n      >{{option.value}}</md-checkbox\\n    >\\n  </div>\\n\\n  <div ng-messages=\\\"CheckboxesView.form.$error\\\">\\n    <div ng-message=\\\"minSelections\\\">\\n      Must select {{CheckboxesView.formItem.maxSelections || 1}} items\\n    </div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Type</label>\\n  <md-select ng-model=\\\"Date.item.config.type\\\">\\n    <md-option value=\\\"date\\\">Date</md-option>\\n    <md-option value=\\\"time\\\">Time</md-option>\\n    <md-option value=\\\"datetime-local\\\">DateTime</md-option>\\n  </md-select>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <input\\n    ng-model=\\\"DateView.formItem.value\\\"\\n    type=\\\"{{DateView.formItem.config.type}}\\\"\\n    ng-required=\\\"DateView.formItem.config.required\\\"\\n  />\\n  <div ng-messages=\\\"DateView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div class=\\\"form-item-container md-inline-form\\\">\\n  <div class=\\\"form-item-actions\\\">\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onDelete\\\"\\n      ng-click=\\\"FormItem.deleteClicked()\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">delete</md-icon>\\n    </md-button>\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onUp\\\"\\n      ng-click=\\\"FormItem.onUp({item: FormItem.item, index: FormItem.index()})\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">arrow_drop_up</md-icon>\\n    </md-button>\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onDown\\\"\\n      ng-click=\\\"FormItem.onDown({item: FormItem.item, index: FormItem.index()})\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">arrow_drop_down</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-input-container ng-if=\\\"FormItem.item.type != 'label'\\\" class=\\\"md-block\\\">\\n    <label>Field Title</label>\\n    <input ng-model=\\\"FormItem.item.props.title\\\" />\\n  </md-input-container>\\n\\n  <md-input-container ng-if=\\\"FormItem.item.type != 'label'\\\" class=\\\"md-block\\\">\\n    <label>Help Text</label>\\n    <input ng-model=\\\"FormItem.item.props.helpText\\\" />\\n  </md-input-container>\\n\\n  <md-input-container\\n    ng-if=\\\"FormItem.item.type === 'agreement'\\\"\\n    class=\\\"md-block\\\"\\n  >\\n    <label>Option Text</label>\\n    <input ng-model=\\\"FormItem.item.options[0].value\\\" />\\n  </md-input-container>\\n\\n  <div ng-switch=\\\"FormItem.item.type\\\">\\n    <upload-item ng-switch-when=\\\"upload\\\" item=\\\"FormItem.item\\\"></upload-item>\\n    <agreement-item\\n      ng-switch-when=\\\"agreement\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></agreement-item>\\n    <label-item ng-switch-when=\\\"label\\\" item=\\\"FormItem.item\\\"></label-item>\\n    <input-item ng-switch-when=\\\"input\\\" item=\\\"FormItem.item\\\"></input-item>\\n    <radio-button-item\\n      ng-switch-when=\\\"multipleChoices\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></radio-button-item>\\n    <matrix-item ng-switch-when=\\\"matrix\\\" item=\\\"FormItem.item\\\"></matrix-item>\\n    <checkboxes-item\\n      ng-switch-when=\\\"checkboxes\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></checkboxes-item>\\n    <textarea-item\\n      ng-switch-when=\\\"textarea\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></textarea-item>\\n    <date-item ng-switch-when=\\\"date\\\" item=\\\"FormItem.item\\\"></date-item>\\n    <select-item\\n      ng-switch-when=\\\"chooseFromList\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></select-item>\\n    <p ng-switch-default>UNKNOWN TYPE</p>\\n  </div>\\n\\n  <md-input-container\\n    ng-if=\\\"FormItem.item.type != 'label' && FormItem.item.type != 'upload'\\\"\\n    class=\\\"md-block\\\"\\n  >\\n    <md-checkbox ng-model=\\\"FormItem.item.config.required\\\"\\n      >Required field</md-checkbox\\n    >\\n  </md-input-container>\\n</div>\\n\";","export default \"<div>\\n  <form-item\\n    ng-repeat=\\\"item in container.form.items track by $index\\\"\\n    type=\\\"{{item.type}}\\\"\\n    item=\\\"item\\\"\\n    index=\\\"$index\\\"\\n    on-delete=\\\"container.delete(item, index)\\\"\\n    on-up=\\\"container.up(item, index)\\\"\\n    on-down=\\\"container.down(item, index)\\\"\\n  >\\n  </form-item>\\n</div>\\n\";","export default \"<div class=\\\"md-inline-form\\\">\\n  <div\\n    class=\\\"formItem\\\"\\n    ng-repeat=\\\"formItem in FormView.form.items track by $index\\\"\\n    ng-switch=\\\"formItem.type\\\"\\n    layout=\\\"column\\\"\\n  >\\n    <ng-form name=\\\"formItemForm\\\">\\n      <div>\\n        <div class=\\\"formItem-title\\\" ng-show=\\\"formItem.type !== 'label'\\\">\\n          {{formItem.props.title}}\\n        </div>\\n        <div class=\\\"formItem-help-text\\\">{{formItem.props.helpText}}</div>\\n\\n        <upload-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"upload\\\"\\n        ></upload-view>\\n        <agreement-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"agreement\\\"\\n        ></agreement-view>\\n        <checkboxes-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"checkboxes\\\"\\n        ></checkboxes-view>\\n        <radio-button-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"multipleChoices\\\"\\n        ></radio-button-view>\\n        <input-view\\n          form-item=\\\"formItem\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"input\\\"\\n        ></input-view>\\n        <textarea-view\\n          form-item=\\\"formItem\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"textarea\\\"\\n        ></textarea-view>\\n        <date-view\\n          form-item=\\\"formItem\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"date\\\"\\n        ></date-view>\\n        <matrix-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"matrix\\\"\\n        ></matrix-view>\\n        <select-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"chooseFromList\\\"\\n        ></select-view>\\n        <label-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"label\\\"\\n        ></label-view>\\n      </div>\\n    </ng-form>\\n  </div>\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Placeholder</label>\\n  <input type=\\\"text\\\" ng-model=\\\"Input.item.config.placeholder\\\" />\\n</md-input-container>\\n<md-input-container class=\\\"md-block\\\">\\n  <label>Type</label>\\n  <md-select ng-model=\\\"Input.item.config.type\\\">\\n    <md-option value=\\\"text\\\">Text</md-option>\\n    <md-option value=\\\"number\\\">Number</md-option>\\n    <md-option value=\\\"email\\\">Email</md-option>\\n  </md-select>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <input\\n    ng-model=\\\"InputView.formItem.value\\\"\\n    type=\\\"{{InputView.formItem.config.type}}\\\"\\n    placeholder=\\\"{{InputView.formItem.config.placeholder}}\\\"\\n    ng-required=\\\"InputView.formItem.config.required\\\"\\n  />\\n  <div ng-messages=\\\"InputView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Text</label>\\n  <textarea ng-model=\\\"Label.item.value\\\"></textarea>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-content\\n    flex\\n    layout-padding\\n    layout=\\\"row\\\"\\n    layout-align=\\\"center center\\\"\\n    ng-bind-html=\\\"LabelView.sanitizedTitle\\\"\\n  >\\n  </md-content>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container columnContainer\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Matrix.item.config.columns\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"column in Matrix.item.config.columns track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"input-container\\\">\\n      <label>Column {{$index + 1}}</label>\\n      <input ng-model=\\\"column.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button\\\"\\n      md-no-ink\\n      aria-label=\\\"delete column item\\\"\\n      ng-click=\\\"Matrix.deleteColumn($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n      <md-tooltip md-autohide=\\\"true\\\">Delete</md-tooltip>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      md-no-ink\\n      aria-label=\\\"add option item\\\"\\n      ng-click=\\\"Matrix.addColumn()\\\"\\n      >Add Column</md-button\\n    >\\n  </div>\\n</div>\\n\\n<div\\n  class=\\\"sortable-container rowContainer\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Matrix.item.config.rows\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"row in Matrix.item.config.rows track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder row item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"input-container\\\">\\n      <label>Row {{$index + 1}}</label>\\n      <input ng-model=\\\"row.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button\\\"\\n      md-no-ink\\n      aria-label=\\\"delete row item\\\"\\n      ng-click=\\\"Matrix.deleteRow($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n      <md-tooltip md-autohide=\\\"true\\\">Delete</md-tooltip>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      md-no-ink\\n      aria-label=\\\"add row item\\\"\\n      ng-click=\\\"Matrix.addRow()\\\"\\n      >Add row</md-button\\n    >\\n  </div>\\n</div>\\n\";","export default \"<md-input-container class=\\\"matrix-container md-block\\\" layout=\\\"column\\\">\\n  <div class=\\\"matrix\\\">\\n    <div class=\\\"matrix-row\\\" flex layout=\\\"row\\\">\\n      <span class=\\\"matrix-cell\\\" flex=\\\"20\\\"></span>\\n      <span\\n        class=\\\"matrix-cell matrix-cell-header\\\"\\n        flex\\n        ng-repeat=\\\"column in MatrixView.formItem.config.columns track by $index\\\"\\n        >{{column.value}}</span\\n      >\\n    </div>\\n    <div\\n      class=\\\"matrix-row\\\"\\n      ng-repeat=\\\"row in MatrixView.formItem.config.rows track by $index\\\"\\n      layout=\\\"row\\\"\\n    >\\n      <span class=\\\"matrix-cell\\\" flex=\\\"20\\\" layout=\\\"column\\\" layout-align=\\\"center\\\"\\n        >{{row.value}}</span\\n      >\\n      <md-radio-group\\n        ng-model=\\\"row.selected\\\"\\n        ng-change=\\\"MatrixView._updateValidity()\\\"\\n        flex\\n        layout=\\\"row\\\"\\n      >\\n        <span\\n          class=\\\"matrix-cell radio-button-cell\\\"\\n          flex\\n          ng-repeat=\\\"column in MatrixView.formItem.config.columns track by $index\\\"\\n        >\\n          <md-radio-button\\n            value=\\\"{{column.value}}\\\"\\n            aria-label=\\\"...\\\"\\n          ></md-radio-button>\\n        </span>\\n      </md-radio-group>\\n    </div>\\n  </div>\\n\\n  <div ng-messages=\\\"MatrixView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"RadioButton.item.options\\\"\\n>\\n  <md-switch\\n    ng-model=\\\"RadioButton.item.config.direction\\\"\\n    ng-true-value=\\\"'horizontal'\\\"\\n    ng-false-value=\\\"'vertical'\\\"\\n  >\\n    Layout direction ({{RadioButton.item.config.direction == 'horizontal' ?\\n    'Horizontal' : 'Vertical'}})\\n  </md-switch>\\n\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in RadioButton.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button md-warn\\\"\\n      ng-click=\\\"RadioButton.deleteOption($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-button class=\\\"md-raised md-accent\\\" ng-click=\\\"RadioButton.addOption()\\\"\\n    >Add Option</md-button\\n  >\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-radio-group\\n    name=\\\"formItemInput\\\"\\n    ng-required=\\\"RadioButtonView.formItem.config.required\\\"\\n    ng-model=\\\"RadioButtonView.formItem.value\\\"\\n    layout=\\\"{{RadioButtonView.formItem.config.direction == 'horizontal' ? 'row' : 'column'}}\\\"\\n    required\\n  >\\n    <md-radio-button\\n      ng-repeat=\\\"option in RadioButtonView.formItem.options track by $index\\\"\\n      value=\\\"{{option.value}}\\\"\\n      aria-label=\\\"...\\\"\\n    >\\n      {{option.value}}\\n    </md-radio-button>\\n  </md-radio-group>\\n\\n  <div ng-messages=\\\"RadioButtonView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Select.item.options\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in Select.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button class=\\\"md-button md-warn\\\" ng-click=\\\"Select.deleteOption($index)\\\">\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-button class=\\\"md-raised md-accent\\\" ng-click=\\\"Select.addOption()\\\"\\n    >Add Option</md-button\\n  >\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-select\\n    name=\\\"formItemInput\\\"\\n    ng-required=\\\"SelectView.formItem.config.required\\\"\\n    ng-model=\\\"SelectView.formItem.value\\\"\\n  >\\n    <md-option\\n      ng-repeat=\\\"option in SelectView.formItem.options track by $index\\\"\\n      ng-value=\\\"option.value\\\"\\n      >{{ option.value }}</md-option\\n    >\\n  </md-select>\\n  <div ng-messages=\\\"SelectView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Placeholder</label>\\n  <input type=\\\"text\\\" ng-model=\\\"Textarea.item.config.placeholder\\\" />\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <textarea\\n    ng-model=\\\"TextareaView.formItem.value\\\"\\n    placeholder=\\\"{{TextareaView.formItem.config.placeholder}}\\\"\\n    ng-required=\\\"TextareaView.formItem.config.required\\\"\\n  ></textarea>\\n  <div ng-messages=\\\"TextareaView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Upload.item.options\\\"\\n>\\n  <md-input-container class=\\\"md-block\\\">\\n    <label>Upload Button label</label>\\n    <input ng-model=\\\"Upload.item.config.uploadFileButtonLabel\\\" />\\n  </md-input-container>\\n\\n  <md-switch\\n    ng-model=\\\"Upload.item.config.multipleUpload\\\"\\n    ng-true-value=\\\"true\\\"\\n    ng-false-value=\\\"false\\\"\\n  >\\n    Multiple\\n  </md-switch>\\n\\n  <md-input-container class=\\\"md-block\\\">\\n    <span>Max File size: {{Upload.item.config.size}} Mb</span>\\n    <input\\n      type=\\\"number\\\"\\n      id=\\\"size\\\"\\n      name=\\\"size\\\"\\n      min=\\\"0.1\\\"\\n      max=\\\"999\\\"\\n      step=\\\"0.1\\\"\\n      aria-label=\\\"size\\\"\\n      ng-model=\\\"Upload.item.config.size\\\"\\n    />\\n  </md-input-container>\\n\\n  <md-input-container class=\\\"md-block\\\">\\n    <label>Max file size error message</label>\\n    <textarea\\n      ng-model=\\\"Upload.item.config.sizeErrMessage\\\"\\n      md-maxlength=\\\"150\\\"\\n      rows=\\\"2\\\"\\n    ></textarea>\\n  </md-input-container>\\n\\n  <md-switch\\n    ng-model=\\\"Upload.item.config.showAccept\\\"\\n    ng-true-value=\\\"true\\\"\\n    ng-false-value=\\\"false\\\"\\n  >\\n    Configure allowed file types\\n  </md-switch>\\n\\n  <md-input-container class=\\\"md-block\\\" ng-if=\\\"Upload.item.config.showAccept\\\">\\n    <label>Allowed Types</label>\\n    <textarea\\n      ng-model=\\\"Upload.item.config.accept\\\"\\n      md-maxlength=\\\"150\\\"\\n      rows=\\\"2\\\"\\n    ></textarea>\\n  </md-input-container>\\n</div>\\n\";","export default \"<div layout=\\\"row\\\" class=\\\"option-item upload-item\\\">\\n  <md-input-container class=\\\"md-block\\\" style=\\\"margin: 0\\\">\\n    <input type=\\\"file\\\" class=\\\"ng-hide\\\" aria-label=\\\"file\\\" />\\n    <md-input-container flex class=\\\"md-block\\\">\\n      <input\\n        type=\\\"text\\\"\\n        ng-model=\\\"fileName\\\"\\n        class=\\\"ng-hide\\\"\\n        disabled\\n        aria-label=\\\"fileName\\\"\\n      />\\n    </md-input-container>\\n  </md-input-container>\\n\\n  <md-button class=\\\"md-raised md-accent upload-button\\\"\\n    ><md-icon class=\\\"material-icons\\\">attach_file</md-icon\\n    ><span\\n      >{{UploadView.formItem.config.uploadFileButtonLabel}}</span\\n    ></md-button\\n  >\\n</div>\\n\\n<div>\\n  <label></label>\\n  <div\\n    style=\\\"display: grid; grid-template-columns: 8em auto; align-items: center\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in UploadView.formItem.options track by $index\\\"\\n  >\\n    <md-button ng-click=\\\"UploadView.removeItem($index)\\\" class=\\\"md-icon-button\\\">\\n      <md-icon class=\\\"material-icons\\\">close</md-icon>\\n    </md-button>\\n    <span>{{option.name}}</span>\\n  </div>\\n</div>\\n\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.scss'\nimport { UploadItem } from './directives/upload-item/upload-item.directive'\nimport { UploadView } from './directives/upload-item/upload-view.directive'\nimport { AgreementItem } from './directives/agreement-item/agreement-item.directive'\nimport { AgreementView } from './directives/agreement-item/agreement-view.directive'\nimport { MainController } from './main/main.controller'\nimport { Utils } from './utils/utils.service'\nimport { CheckboxesItem } from './directives/checkboxes-item/checkboxes-item.directive'\nimport { CheckboxesView } from './directives/checkboxes-item/checkboxes-view.directive'\nimport { FormItem } from './directives/form-item/form-item.directive'\nimport { FormItemsContainer } from './directives/form-items-container/form-items-container.directive'\nimport { FormView } from './directives/form-view/form-view.directive'\nimport { InputItem } from './directives/input-item/input-item.directive'\nimport { InputView } from './directives/input-item/input-view.directive'\nimport { LabelItem } from './directives/label-item/label-item.directive'\nimport { LabelView } from './directives/label-item/label-view.directive'\nimport { MatrixItem } from './directives/matrix-item/matrix-item.directive'\nimport { MatrixView } from './directives/matrix-item/matrix-view.directive'\nimport { RadioButtonItem } from './directives/radio-button-item/radio-button-item.directive'\nimport { RadioButtonView } from './directives/radio-button-item/radio-button-view.directive'\nimport { SelectView } from './directives/select-item/select-view.directive'\nimport { SelectItem } from './directives/select-item/select-item.directive'\nimport { DateView } from './directives/date-item/date-view.directive'\nimport { DateItem } from './directives/date-item/date-item.directive'\nimport { TextareaItem } from './directives/textarea-item/textarea-item.directive'\nimport { TextareaView } from './directives/textarea-item/textarea-view.directive'\n\nexport default angular\n  .module('angularMaterialFormBuilder', [\n    'ngMaterial',\n    'angular-sortable-view',\n    'ngMessages',\n  ])\n  .service('Utils', Utils)\n  .controller('MainController', () => new MainController())\n  .directive('uploadItem', () => new UploadItem())\n  .directive('uploadView', () => new UploadView())\n  .directive('agreementItem', () => new AgreementItem())\n  .directive('agreementView', () => new AgreementView())\n  .directive('checkboxesItem', () => new CheckboxesItem())\n  .directive('checkboxesView', () => new CheckboxesView())\n  .directive('formItem', () => new FormItem())\n  .directive('formItemsContainer', () => new FormItemsContainer())\n  .directive('formView', () => new FormView())\n  .directive('inputItem', () => new InputItem())\n  .directive('inputView', () => new InputView())\n  .directive('labelItem', () => new LabelItem())\n  .directive('labelView', () => new LabelView())\n  .directive('matrixItem', () => new MatrixItem())\n  .directive('matrixView', () => new MatrixView())\n  .directive('radioButtonItem', () => new RadioButtonItem())\n  .directive('radioButtonView', () => new RadioButtonView())\n  .directive('selectItem', () => new SelectItem())\n  .directive('selectView', () => new SelectView())\n  .directive('dateItem', () => new DateItem())\n  .directive('dateView', () => new DateView())\n  .directive('textareaItem', () => new TextareaItem())\n  .directive('textareaView', () => new TextareaView())\n"],"names":["root","factory","exports","module","define","amd","self","AgreementItemCtrl","Utils","$element","this","Element","item","extend","config","maxSelections","options","value","selected","AgreementItem","restrict","scope","controller","controllerAs","bindToController","AgreementViewCtrl","$scope","Scope","formItem","selectedOptions","_getSelectedOptions","disableOptions","isValid","_updateView","_updateValidity","isPreview","_enableWatchers","filter","option","length","required","form","$setValidity","$watch","newVal","undefined","AgreementView","$timeout","template","AgreementViewTemplate","element","attrs","ctrl","init","CheckboxesItemCtrl","index","splice","push","setTimeout","find","focus","CheckboxesItem","CheckboxesItemTemplate","CheckboxesViewCtrl","CheckboxesView","CheckboxesViewTemplate","DateItemCtrl","type","DateItem","DateItemTemplate","DateViewCtrl","DateView","DateViewTemplate","elem","DEFAULT_TITLE","upload","agreement","input","chooseFromList","label","multipleChoices","matrix","checkboxes","textarea","date","FormItemCtrl","$attrs","Attrs","templates","props","title","helpText","onDelete","FormItem","$compile","onUp","onDown","FormItemTemplate","_getItemTemplate","el","FormItemsContainerCtrl","items","prevItem","nextItem","FormItemsContainer","FormItemsContainerTemplate","FormViewCtrl","FormView","FormViewTemplate","InputItemCtrl","InputItem","InputItemTemplate","InputViewCtrl","InputView","InputViewTemplate","LabelItemCtrl","LabelItem","LabelItemTemplate","LabelViewCtrl","$sce","trustAsHtml","LabelView","LabelViewTemplate","MatrixItemCtrl","$document","RowContainer","angular","querySelector","ColumnContainer","rows","columns","bind","MatrixItem","MatrixItemTemplate","MatrixViewCtrl","valid","some","row","$watchGroup","MatrixView","MatrixViewTemplate","RadioButtonItemCtrl","RadioButtonItem","RadioButtonTemplate","RadioButtonViewCtrl","RadioButtonView","RadioButtonViewTemplate","SelectItemCtrl","SelectItem","SelectTemplate","SelectViewCtrl","SelectView","SelectViewTemplate","TextareaItemCtrl","TextareaItem","TextareaItemTemplate","TextareaViewCtrl","TextareaView","TextareaViewTemplate","UploadItemCtrl","UploadItem","UploadItemTemplate","UploadViewCtrl","isMultiple","showAllowed","size","uploadFileButtonLabel","multipleUpload","attr","removeAttr","showAccept","setAttribute","accept","removeAttribute","_updateMultiple","_updateAccept","UploadView","UploadViewTemplate","button","css","on","trigger","click","e","$apply","files","Array","from","target","maxSizeMB","file","text","sizeErrMessage","map","name","MainController","dest","src","Object","keys","reduce","result","key","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","service","directive"],"sourceRoot":""}